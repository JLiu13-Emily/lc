class Solution {
    public int maximizeSweetness(int[] sweetness, int K) {
        int n = sweetness.length;
        int sum = 0, min = Integer.MAX_VALUE;
        for(int i : sweetness){
            sum += i;
            min = Math.min(min, i);
        }
        if(K + 1 == 1) return sum; 
        int l = min, r = sum;
        while(l <= r){
            int mid = l + (r - l) / 2;
            if(helper(mid, sweetness, K + 1)){
                r = mid - 1;
            }
            else{
                l = mid + 1;
            }
        }
        return l;
    }
    private boolean helper(int target, int[] sweetness, int K){
        int count = 1;
        long sum = 0;
        for(int i : sweetness){
            sum += i;
            if(sum > target){
                sum = 0;
                count++;
                if(count > K){
                    return false;
                }
            }
        }
        return true;
    }
}
