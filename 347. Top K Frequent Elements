class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int n = nums.length;
        if(n == 0 || nums == null) return new int[]{};
        List<Integer>[] frequency = new List[n + 1];
        Map<Integer, Integer> map = new HashMap<>();
        for(int i : nums) {
            map.put(i, map.getOrDefault(i, 0) + 1);
        }
        for(int key : map.keySet()) {
            int freq = map.get(key);
            frequency[freq] = new ArrayList<>();
            frequency[freq].add(key);
        }
        List<Integer> res = new ArrayList<>();
        for(int i = n - 1; i >= 0 && res.size() < k; i--) {
            if(frequency[i] != null)
                res.addAll(frequency[i]);
        }
        return res.toArray(new int[k]);
    }
}
