class Solution {
    public List<List<Integer>> getSkyline(int[][] buildings) {
        List<List<Integer>> res = new ArrayList<>();
        List<int[]> points = new ArrayList<>();
        for(int[] i : buildings){
            points.add(new int[]{i[0], -i[2]});
            points.add(new int[]{i[1], i[2]});
        }
        Collections.sort(points, (int[] a, int[] b) ->{
            if(a[0] == b[0]){
                return a[1] - b[1];
            }
            else{
                return a[0] - b[0];
            }
        });
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> b - a);
        pq.add(0);
        int prehighest = 0;
        for(int[] p : points){
            if(p[1] < 0){
                pq.add(-p[1]);
            }
            else{
                pq.remove(p[1]);
            }
            int curheight = pq.peek();
            if(curheight != prehighest){
                res.add(Arrays.asList(p[0],curheight));
                prehighest = curheight;
            }
        }
        return res;
    }
}
