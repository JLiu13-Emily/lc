class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        if(n == 1) return Collections.singletonList(0);
        List<Set<Integer>> neighbors = new ArrayList<>();
        for(int i = 0; i < n; i++) neighbors.add(new HashSet<>());
        for(int[] e : edges) {
            neighbors.get(e[0]).add(e[1]);
            neighbors.get(e[1]).add(e[0]);
        }
        List<Integer> leaves = new ArrayList<>();
        for(int i = 0; i < n; i ++) {
            if(neighbors.get(i).size() == 1) {
                leaves.add(i);
            }
        }
        while(n > 2) {
            n -= leaves.size();
            List<Integer> newLeaves = new ArrayList<>();
            for(int i : leaves) {
                int temp = neighbors.get(i).iterator().next();
                neighbors.get(temp).remove(i);
                if(neighbors.get(temp).size() == 1) newLeaves.add(temp);
            }
            leaves = newLeaves;
        }
        return leaves;
    }
}
