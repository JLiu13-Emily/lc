class Solution {
    int count = 0;
    public int findDistance(TreeNode root, int p, int q) {
        TreeNode lca = helper(root, p, q);
        distance(lca, p, 0);
        distance(lca, q, 0);
        return count;
    }
    private TreeNode helper(TreeNode root, int p, int q){
        if(root == null || root.val == p || root.val == q){
            return root;
        }
        TreeNode left = helper(root.left, p, q);
        TreeNode right = helper(root.right, p, q);
        if(left != null && right != null){
            return root;
        }
        return left == null? right: left;
    }
    private void distance(TreeNode root, int nodevalue, int depth){
        if(root == null) return ;
        if(root.val == nodevalue){
            count += depth;
            return;
        }
        distance(root.left, nodevalue, depth + 1);
        distance(root.right, nodevalue, depth + 1);        
    }
}
