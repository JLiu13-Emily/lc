class Solution {
    public int minSkips(int[] dist, int speed, int hoursBefore) {
        int n = dist.length;
        long[] dp = new long[n];

        Arrays.fill(dp, (long)1e9);

        double sp = speed;
        dp[0] = 0;
        for(int i = 0; i < n - 1; i++){
            for(int j = i + 1; j > 0; j--){
                dp[j] = (long)(Math.ceil((dp[j] + dist[i]) / sp) * sp);
                dp[j] = Math.min(dp[j], dp[j - 1] + dist[i]);
            }
            dp[0] += (long)(Math.ceil(dist[i] / sp) * sp);
        }
        for(int j = 0; j < n; j++){
            if(dp[j] / sp + dist[n - 1] / sp <= (double)hoursBefore){
                return j;
            }
        }
        return -1;
    }
}
