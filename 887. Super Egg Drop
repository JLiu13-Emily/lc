class Solution {
    public int superEggDrop(int k, int n) {
        int[][] dp = new int[k + 1][n + 1];
        for(int[] d: dp) Arrays.fill(d, Integer.MAX_VALUE);
        for(int i = 0 ; i <= n; i++){
            dp[0][i] = 0;
            dp[1][i] = i;
        }
        for(int j = 0; j <= k; j++){
            dp[j][0] = 0;
        }
        
        for(int i = 2; i <= k; i++){
            for(int j = 1; j <= n; j++){
                int lo = 1, hi = j, mid = 0;
                while(lo <= hi){
                    mid = lo + (hi - lo) / 2;
                    int brk = dp[i - 1][mid - 1];
                    int nobrk = dp[i][j - mid];
                    if(brk > nobrk){
                        hi = mid - 1;
                    }
                    else{
                        lo = mid + 1;
                    }
                    dp[i][j] = Math.min(dp[i][j], Math.max(brk, nobrk) + 1);
                }                
            }
        }
        return dp[k][n];
    }
}
