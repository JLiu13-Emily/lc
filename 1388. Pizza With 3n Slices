class Solution {
    public int maxSizeSlices(int[] slices) {
        int n = slices.length;
        int picknum = n / 3;
        int[] s1 = Arrays.copyOfRange(slices, 0, n - 1);
        int[] s2 = Arrays.copyOfRange(slices, 1, n);
        return Math.max(maxSum(s1, picknum), maxSum(s2, picknum));
    }
    private int maxSum(int[] slices, int picknum){
        int n = slices.length;
        int[][] dp = new int[n + 1][picknum + 1];
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= picknum; j++){
                if(i == 1){
                    dp[i][j] = slices[i - 1];
                }
                else{
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i - 2][j - 1] + slices[i - 1]);
                }
                
            }
        }
        return dp[n][picknum];
    }
}
