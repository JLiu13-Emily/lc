class Solution {
    public int findTheLongestSubstring(String s) {
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int[] vcount = new int[5];
        int res = 0;
        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) == 'a'){
                vcount[0]++;
            }
            else if(s.charAt(i) == 'e'){
                vcount[1]++;
            }
            else if(s.charAt(i) == 'i'){
                vcount[2]++;
            }
            else if(s.charAt(i) == 'o'){
                vcount[3]++;
            }
            else if(s.charAt(i) == 'u'){
                vcount[4]++;
            }
            int key = changeCount(vcount);
            if(map.containsKey(key)){
                res = Math.max(res, i - map.get(key));
            }
            else map.put(key, i);            
        }
        return res;        
    }
    private int changeCount(int[] vcount){
        int key = 0;
        for(int i = 0; i < 5; i++){
            if(vcount[i] % 2 == 1){
                key += (1<<i);
            }
        }
        return key;
    }
}
