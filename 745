class WordFilter {
    private Trie tn = new Trie();
    public WordFilter(String[] words) {
        for(int i = 0; i < words.length; i++){
            for(int j = 0; j < words[i].length(); j++){
                tn.insert(words[i].substring(j) + '{' + words[i], i);
            }
        }
    } 
    public int f(String prefix, String suffix) {
        return tn.search(suffix + '{' + prefix);
    }
}
class TrieNode{
    TrieNode[] children;
    int weight;
    public TrieNode(){
        children = new TrieNode[27];
        weight = 0;
    }
}
class Trie{
    private TrieNode root;
    public Trie(){
        root = new TrieNode();
    }
    public void insert(String word, int idx) {
        TrieNode node = root;
        for(int i = 0; i < word.length(); i++){
            char curChar = word.charAt(i);
            if(node.children[curChar - 'a'] == null){
                node.children[curChar - 'a'] = new TrieNode();
            }
            node = node.children[curChar - 'a'];
            node.weight = idx;
        }  
    }
    public int search(String word) {
        TrieNode node = root;
        for(int i = 0; i < word.length(); i++){
            char curChar = word.charAt(i);
            if(node.children[curChar - 'a'] == null){
                return -1;
            }
            node = node.children[curChar - 'a'];
        }
        return node.weight;
    }
}
