class Solution {
    public int regionsBySlashes(String[] grid) {
        int n = grid.length;
        int count = 0;
        int[][] newGrid = new int[n * 3][n * 3];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(grid[i].charAt(j) == '/'){
                    newGrid[i * 3 + 1][j * 3 + 1] = newGrid[i * 3 + 2][j * 3] = newGrid[i * 3][j * 3 + 2] = 1;
                }
                else if(grid[i].charAt(j) == '\\'){
                    newGrid[i * 3][j * 3] = newGrid[i * 3 + 1][j * 3 + 1] = newGrid[i * 3 + 2][j * 3 + 2] = 1;
                }
            }
        }
        for(int i = 0; i < n * 3; i++){
            for(int j = 0; j < n * 3; j++){
                count += dfs(newGrid, i, j) > 0? 1 : 0;
            }
        }
        return count;
    }
    private int dfs(int[][] g, int i, int j){
        if(i < 0 || j < 0 || i >= g.length || j >= g.length || g[i][j] != 0){
            return 0;
        }
        g[i][j] = 1;
        return 1 + dfs(g, i + 1, j) + dfs(g, i, j + 1) + dfs(g, i - 1, j) + dfs(g, i, j - 1);
    }
}
