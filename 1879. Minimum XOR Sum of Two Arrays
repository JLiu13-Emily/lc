class Solution {
    public int minimumXORSum(int[] nums1, int[] nums2) {
        int[] dp = new int[1 << nums2.length];
        Arrays.fill(dp, Integer.MAX_VALUE);
        return dfs (dp, nums1, nums2, 0, 0);
    }
    private int dfs(int[] dp, int[] nums1, int[] nums2, int idx, int mask) {
        if(idx >= nums2.length) return 0;
        if(dp[mask] == Integer.MAX_VALUE) {
            for(int i = 0; i < nums2.length; i++) {
                if((mask & (1 << i)) == 0) {
                    dp[mask] = Math.min(dp[mask], (nums1[idx] ^ nums2[i]) + dfs(dp, nums1, nums2, idx + 1, mask + (1 << i)));
                }
            }            
        }
        return dp[mask];
    }
}
