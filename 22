class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        StringBuilder s = new StringBuilder();
        helper(n, res, s, 0, 0);
        return res;
    }
    private void helper(int n, List<String> res, StringBuilder s, int l, int r){
        if(s.length() == 2 * n){
            res.add(s.toString());
            return;
        }
        if(l < n){
            s.append('(');
            helper(n, res, s, l + 1, r);
            s.setLength(s.length() - 1);
        }
        if(r < l){
            s.append(')');
            helper(n, res, s, l, r + 1);
            s.setLength( s.length() - 1);
        }
    }
}
