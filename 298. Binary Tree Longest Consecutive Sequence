class Solution {
    int max = 0;
    public int longestConsecutive(TreeNode root) {
        dfs(root);
        return max;
    }
    private int dfs(TreeNode root) {
        if(root == null) return 0;
        int left = dfs(root.left) + 1;
        int right = dfs(root.right) + 1;
        if(root.left != null && root.left.val != root.val + 1) {
            left = 1;
        }
        if(root.right != null && root.right.val != root.val + 1) {
            right = 1;
        }
        int len = Math.max(left, right);
        max = Math.max(max, len);
        return len;
    }
}
