class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> curList = new ArrayList<>();
        helper(root, curList, 0, targetSum);
        return res;
    }
    private void helper(TreeNode root, List<Integer> curList, int curSum, int targetSum){
        if(root == null) return;
        curSum += root.val;
        curList.add(root.val);
        if(root.left == null && root.right == null)
        {
            if(curSum == targetSum){
                res.add(new ArrayList<>(curList));
            }
            return;
        }        
        if(root.left != null){
            helper(root.left, curList, curSum , targetSum);
            curList.remove(curList.size() - 1);
        }
        if(root.right != null){
            helper(root.right, curList, curSum , targetSum);
            curList.remove(curList.size() - 1);
        }
    }
}
