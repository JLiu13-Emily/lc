class Solution {
    public int[] smallestRange(List<List<Integer>> nums) {
        PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> nums.get(a[0]).get(a[1])));
        int max = Integer.MIN_VALUE, start = 0, end = Integer.MAX_VALUE;
        for (int i = 0; i < nums.size(); i++) {
            pq.offer(new int[]{i, 0});
            max = Math.max(max, nums.get(i).get(0));
        }
        while(pq.size() == nums.size()) {
            int[] curr = pq.poll();
            int row = curr[0];
            int col = curr[1];
            if (max - nums.get(row).get(col) < end - start) {
                start = nums.get(row).get(col);
                end = max;
            }
            if (col < nums.get(row).size() - 1) {
                pq.offer(new int[]{row, col + 1});
                max = Math.max(max, nums.get(row).get(col +1));
            }
        }
        return new int[]{start, end};
    }
}
